package org.usfirst.frc253.Code2017.commands;

import org.usfirst.frc253.Code2017.Robot;

import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.command.Command;

/**
 *
 */
public class PathPlannerTest extends Command {

	/* {0, 0},
	{5, 0},
	{7, 6},
	{12, 6} */
	
	double[][] leftVelocity = new double[][] {
		{0.0, 0.0},
		{0.1, 1.6968434502204273},
		{0.2, 2.491789778569879},
		{0.30000000000000004, 2.925963107525595},
		{0.4, 3.150083396668141},
		{0.5, 3.2473126148799376},
		{0.6, 3.262505395718389},
		{0.7, 3.218807895063803},
		{0.7999999999999999, 3.1268050540235426},
		{0.8999999999999999, 2.992255578612843},
		{0.9999999999999999, 2.821433912218414},
		{1.0999999999999999, 2.623279857802541},
		{1.1999999999999997, 2.420524053289033},
		{1.2999999999999998, 2.254168651822777},
		{1.4, 2.1661812686995443},
		{1.5, 2.2084953314133178},
		{1.6, 2.4110570186633},
		{1.7000000000000002, 2.704676352441889},
		{1.8000000000000003, 3.025456128318846},
		{1.9000000000000004, 3.3367332093898443},
		{2.0000000000000004, 3.6116079747701972},
		{2.1000000000000005, 3.841142866538617},
		{2.2000000000000006, 4.028068459688811},
		{2.3000000000000007, 4.178419821440888},
		{2.400000000000001, 4.300392978261962},
		{2.500000000000001, 4.402690872322911},
		{2.600000000000001, 4.494270990646355},
		{2.700000000000001, 4.578484801980811},
		{2.800000000000001, 4.649999439916861},
		{2.9000000000000012, 4.701658325691037},
		{3.0000000000000013, 4.702259859974163},
		{3.1000000000000014, 4.609056203497233},
		{3.2000000000000015, 4.460103732282521},
		{3.3000000000000016, 4.294686794868715},
		{3.4000000000000017, 4.132359532340873},
		{3.5000000000000018, 3.9911754343191053},
		{3.600000000000002, 3.8749248300421892},
		{3.700000000000002, 3.777107914869282},
		{3.800000000000002, 3.68902523200614},
		{3.900000000000002, 3.5971859621424764},
		{4.000000000000002, 3.4811220875487514},
		{4.100000000000001, 3.3095879358345774},
		{4.200000000000001, 3.030575604692823},
		{4.300000000000001, 2.5547052376239914},
		{4.4, 1.726313602093034},
		{4.5, 0.0}
	};
	
	double[][] rightVelocity = new double[][] {
		{0.0, 0.0},
		{0.1, 1.7285462351397396},
		{0.2, 2.5593930202851043},
		{0.30000000000000004, 3.0381520855114723},
		{0.4, 3.320672334151901},
		{0.5, 3.496484500367129},
		{0.6, 3.617597118627713},
		{0.7, 3.7149992468254953},
		{0.7999999999999999, 3.808586461777223},
		{0.8999999999999999, 3.9105598425741883},
		{0.9999999999999999, 4.027463713507634},
		{1.0999999999999999, 4.1631323866268515},
		{1.1999999999999997, 4.310470588878618},
		{1.2999999999999998, 4.449230957045977},
		{1.4, 4.5615901462784985},
		{1.5, 4.615397253837334},
		{1.6, 4.586188588491036},
		{1.7000000000000002, 4.522897239134507},
		{1.8000000000000003, 4.455867362974834},
		{1.9000000000000004, 4.3895400030900396},
		{2.0000000000000004, 4.323963145360566},
		{2.1000000000000005, 4.251795423948277},
		{2.2000000000000006, 4.16202457706665},
		{2.3000000000000007, 4.044457995611418},
		{2.400000000000001, 3.8897328314425326},
		{2.500000000000001, 3.690323723756742},
		{2.600000000000001, 3.441443866565454},
		{2.700000000000001, 3.1480382315159736},
		{2.800000000000001, 2.8317175511992643},
		{2.9000000000000012, 2.5264268478402134},
		{3.0000000000000013, 2.295225554076704},
		{3.1000000000000014, 2.2135578502610485},
		{3.2000000000000015, 2.2649954058113613},
		{3.3000000000000016, 2.404716899409321},
		{3.4000000000000017, 2.592494361884368},
		{3.5000000000000018, 2.785138597631589},
		{3.600000000000002, 2.956616631829207},
		{3.700000000000002, 3.0953243155338033},
		{3.800000000000002, 3.192832671231788},
		{3.900000000000002, 3.2420935831809152},
		{4.000000000000002, 3.231949855496608},
		{4.100000000000001, 3.1389988235607555},
		{4.200000000000001, 2.918386546240046},
		{4.300000000000001, 2.4871019663088445},
		{4.4, 1.694610811804916},
		{4.5, 0.0}
	};
	
	int numberOfTimeSteps = (leftVelocity.length + rightVelocity.length)/2;
	
	Timer myTimer = new Timer();
	
	
    public PathPlannerTest() {
    	requires(Robot.drivetraintank);
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
//    	myTimer.start();
//    	for(int i = 0; i < .5; i += .01){
//    		Robot.drivetraintank.setLeft_Back(-i);
//        	Robot.drivetraintank.setLeft(-i);
//        	Robot.drivetraintank.setRight(-i);
//        	Robot.drivetraintank.setRight_Back(-i);
//    	}
    	Robot.drivetraintank.setLeft_Back(-.35);
    	Robot.drivetraintank.setLeft(-.35);
    	Robot.drivetraintank.setRight(-.35);
     	Robot.drivetraintank.setRight_Back(-.35);
    	
    	
    	
//    	for(int i = 0; i < numberOfTimeSteps; i++) {
//    		//try changing this to if() if while() doesn't work
////    		System.out.println(myTimer.get());
//    		if(i/10 == leftVelocity[i][0]) {
//    			Robot.drivetraintank.setLeft_Back(leftVelocity[i][1]);
//    			Robot.drivetraintank.setLeft(leftVelocity[i][1]);
//    			Robot.drivetraintank.setRight(rightVelocity[i][1]);
//    	    	Robot.drivetraintank.setRight_Back(rightVelocity[i][1]);
//    		}
//    	}
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    	Robot.drivetraintank.setLeft_Back(0);
    	Robot.drivetraintank.setLeft(0);
    	Robot.drivetraintank.setRight(0);
    	Robot.drivetraintank.setRight_Back(0);
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
